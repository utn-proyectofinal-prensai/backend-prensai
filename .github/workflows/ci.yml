name: CI

on:
  pull_request:
    branches:
      - main
      - develop
      - docker
  push:
    branches:
      - develop
      - docker

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: prensai_api_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.2
          bundler-cache: true

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.7.0
          cache: 'yarn'

      - name: Install dependencies
        run: |
          bundle install --jobs 4 --retry 3
          corepack enable
          yarn install --immutable

      - name: Run RuboCop
        run: bundle exec rubocop --parallel
        continue-on-error: true

      - name: Run Reek
        run: bundle exec reek
        continue-on-error: true

      - name: Run Brakeman
        run: bundle exec brakeman -q -z
        continue-on-error: true

      - name: Setup test database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/prensai_api_test
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load

      - name: Run RSpec
        env:
          RAILS_ENV: test
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/prensai_api_test
          COVERAGE: true
        run: bundle exec rspec --format documentation

      - name: Upload coverage to artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

      - name: Check coverage threshold
        run: |
          COVERAGE=$(grep -oP 'covered at \K[\d.]+' coverage/index.html | head -1)
          echo "Coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "⚠️ Coverage is below 80%"
            exit 0
          fi
        continue-on-error: true

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: prensai-api:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker run --rm prensai-api:test bundle --version
          docker run --rm prensai-api:test ruby --version

